<div class="row">
  <div class="col-xs-6 col-md-6">
    <% if @previous_video %>
      <h5>
        <a href="/videos/<%=@previous_video["id"]%>">
          <span class="glyphicon glyphicon-step-backward" aria-hidden="true"></span>
          <%=@previous_video["title"]%>
        </a>
      </h5>
    <% end %>
  </div>
  <div class="col-xs-6 col-md-6" style="text-align: right;">
    <% if @next_video %>
      <h5>
        <a href="/videos/<%=@next_video["id"]%>">
          <%=@next_video["title"]%>
          <span class="glyphicon glyphicon-step-forward" aria-hidden="true"></span>
        </a>
      </h5>
    <% end %>
  </div>
</div>

<h1 data-flippd-phase="<%= @phase["id"]%>"><%= @video["title"] %></h1>
<p class="lead"><%= @video["description"] %></p>

<div id="video" class="embed-responsive embed-responsive-16by9">
  <div id="player"></div>
</div>

<% if @video["resources"] %>
<div id="resources" class="row" style="margin-top: 1.5em;">
  <div class="col-xs-6 col-md-6">
    <h4>Additional Material</h4>
    <ul class="list-unstyled" style="padding-left: 15px; font-size: 120%;">
    <% @video["resources"].each do |resource| %>
      <li style="padding: 3px 0">
        <span class="glyphicon glyphicon-<%=resource["icon"]%>" aria-hidden="true"></span>
        &nbsp; <a href="<%=resource["url"]%>"><%=resource["title"]%></a>
      </li>
    <% end %>
    </ul>
  </div>
</div>
<% end %>


<div id="comments" class="row" style="margin-top: 1.5em;">
  <h4>Comments</h4>

  <% if @commentProvider.get_comments(start: 0, max: 20, parent_id: nil).each do |comment| %>
      <%= erb :comment_container, :locals => {:comment => comment, :depth => 1} %>
  <% end.empty? %>
    <p> No comments yet </p>
  <% end %>

</div>

<script>
  // 2. This code loads the IFrame Player API code asynchronously.
  var tag = document.createElement('script');

  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // 3. This function creates an <iframe> (and YouTube player)
  //    after the API code downloads.
  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      videoId: '<%= @video["youtube"] %>'
    });
  }
  function stopVideo() {
    player.stopVideo();
  }
</script>

<%



%>
